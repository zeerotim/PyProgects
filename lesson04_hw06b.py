"""
6. Реализовать два небольших скрипта:
а) итератор, генерирующий целые числа, начиная с указанного,
б) итератор, повторяющий элементы некоторого списка, определенного заранее.
Подсказка: использовать функцию count() и cycle() модуля itertools.
Обратите внимание, что создаваемый цикл не должен быть бесконечным. Необходимо предусмотреть условие его завершения.
Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл.
Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.
"""
import itertools
import random

# Скрипт б)

def cycles_sequence(list_numbers, qantity):
    count = 1
    for el in itertools.cycle(list_numbers):
        count += 1
        yield el
        # print(count, el)
        if count > qantity:
            break

len_list = int(input("Укажите количество элементов списка: "))
qantity = int(input("Введите количество элементов поседовательности': "))

# сгенерим список указанной длины
my_list = random.sample(range(0,100), len_list) # только тут значения списка никогда не повторятся
print(my_list)

gen = cycles_sequence(my_list, qantity)
for i in gen:
    print(i)

