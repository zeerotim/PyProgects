"""
2. Создайте собственный класс-исключение, обрабатывающий ситуацию деления на ноль.
Проверьте его работу на данных, вводимых пользователем. При вводе нуля в качестве делителя программа должна корректно
обработать эту ситуацию и не завершиться с ошибкой.
"""

class MyExeption(Exception):
    # Хотел в своем классе наследнике от класса Exception поереопределить вызовв типа исключения
    # ZeroDivisionError, но не нашел как
    # чтобы свой класс исключения подменил этот тип.. и можно было им пользоваться
    # в итоге посмотрел разбор ДЗ, но там также этого не нашел
    def __init__(self):
        self.txt_exception = "Таки деление на ноль, хотя можно сказать, что бесконечность!!!"

    def __str__(self):
        return repr(self.txt_exception)
#

divisible = int(input("Укажите делимое: "))
divisor = int(input("Укажите делитель: "))

if divisor == 0:
    try:
        raise MyExeption
    except MyExeption as my_exc:
        print(my_exc)
else:
    quotient = divisible/divisor
    print(quotient)

# except ZeroDivisionError:
#     # попроблвал переопределить тут.. но видимо нельзя вызывать исключение в момент обработки самого исключения
#     raise MyExeption
#     # print("Деление на ноль")


